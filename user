using System;
using System.Collections.Generic;
using System.Text;

namespace nba
{
    class User
    {
        public string name;
        public Team yourTeam;
        public static string inputTeamNameValue;
        public static string inputPlayerNameValue;
        public bool availability = true;
        public static User[] managers;

        public static void CreateYourUser()
        {
            User you = new User();
            AllManagers.managers[0] = you;
            you.CreateName(you);
        }

        public void CreateName(User you)
        {
            Console.WriteLine("Jak się nazywasz?");
            you.name = Console.ReadLine();
            Console.WriteLine("Nazywasz się " + you.name);
            Console.ReadLine();
            you.InputTeamName();
            you.CheckInputTeamName();
        }

        public void InputTeamName()
        {
            Team.PrintAllTeams();
            Console.WriteLine("Podaj nazwę swojej drużyny");
            inputTeamNameValue = Console.ReadLine();
            CheckInputTeamName();
        }

        public void CheckInputTeamName()
        {
            for (int i = 0; i < Team.teams.Length; i++)
            {
                if (inputTeamNameValue == Team.teams[i].name)
                {
                    yourTeam = Team.teams[i]; // czy odwrotne przypisanie?
                    yourTeam.managerName = name;
                    Team.teams[i].availability = false;
                    return;
                }
            }
            Console.WriteLine("Błąd w podanej nazwie");
            InputTeamName();
            return;
        }

        public static void ChooseGuard1()
        {
            Console.Write("\n Wybierz rozgrywającego:  ");
            inputPlayerNameValue = Console.ReadLine();
            foreach (var player in AllPlayers.players) // sprawdza czy input nazwa poprawny + czy dany gracz jest dostępny do wyboru
            {
                if (inputPlayerNameValue == player.name) // szuka w AllPlayers zawodnika wpisanego w input
                {
                    if(player.availabilty == false) //sprawdza czy zawodnik input nie został już wcześniej wybrany
                    {
                        Console.WriteLine("Zawodnik już został wybrany, ponów swój wybór");
                        ChooseGuard1();
                        return;
                    }
                    else if (player.availabilty == true)
                    {
                        AllManagers.managers[0].yourTeam.guard1 = player; // przypisuje zawodnika input do usera-managera w liście managers[0]
                        player.availabilty = false;
                        return;
                    }
                }
            }
            Console.WriteLine("Błąd w nazwie zawodnika");
            ChooseGuard1();
            return;
        }

        public static void ChooseGuard2()
        {
            Console.Write("\n Wybierz rzucającego obrońcę:  ");
            inputPlayerNameValue = Console.ReadLine();
            foreach (var player in AllPlayers.players) // sprawdza czy input nazwa poprawny + czy dany gracz jest dostępny do wyboru
            {
                if (inputPlayerNameValue == player.name) // szuka w AllPlayers zawodnika wpisanego w input
                {
                    if (player.availabilty == false) //sprawdza czy zawodnik input nie został już wcześniej wybrany
                    {
                        Console.WriteLine("Zawodnik już został wybrany, ponów swój wybór");
                        ChooseGuard2();
                        return;
                    }
                    else if (player.availabilty == true)
                    {
                        AllManagers.managers[0].yourTeam.guard2 = player; // przypisuje zawodnika input do usera-managera w liście managers[0]
                        player.availabilty = false;
                        return;
                    }
                }
            }
            Console.WriteLine("Błąd w nazwie zawodnika");
            ChooseGuard2();
            return;
        }

        public static void ChooseForward1()
        {
            Console.Write("\n Wybierz niskiego skrzydłowego:  ");
            inputPlayerNameValue = Console.ReadLine();
            foreach (var player in AllPlayers.players) // sprawdza czy input nazwa poprawny + czy dany gracz jest dostępny do wyboru
            {
                if (inputPlayerNameValue == player.name) // szuka w AllPlayers zawodnika wpisanego w input
                {
                    if (player.availabilty == false) //sprawdza czy zawodnik input nie został już wcześniej wybrany
                    {
                        Console.WriteLine("Zawodnik już został wybrany, ponów swój wybór");
                        ChooseForward1();
                        return;
                    }
                    else if (player.availabilty == true)
                    {
                        AllManagers.managers[0].yourTeam.forward1 = player; // przypisuje zawodnika input do usera-managera w liście managers[0]
                        player.availabilty = false;
                        return;
                    }
                }
            }
            Console.WriteLine("Błąd w nazwie zawodnika");
            ChooseForward1();
            return;
        }

        public static void ChooseForward2()
        {
            Console.Write("\n Wybierz silnego skrzydłowego:  ");
            inputPlayerNameValue = Console.ReadLine();
            foreach (var player in AllPlayers.players) // sprawdza czy input nazwa poprawny + czy dany gracz jest dostępny do wyboru
            {
                if (inputPlayerNameValue == player.name) // szuka w AllPlayers zawodnika wpisanego w input
                {
                    if (player.availabilty == false) //sprawdza czy zawodnik input nie został już wcześniej wybrany
                    {
                        Console.WriteLine("Zawodnik już został wybrany, ponów swój wybór");
                        ChooseForward2();
                        return;
                    }
                    else if (player.availabilty == true)
                    {
                        AllManagers.managers[0].yourTeam.forward2 = player; // przypisuje zawodnika input do usera-managera w liście managers[0]
                        player.availabilty = false;
                        return;
                    }
                }
            }
            Console.WriteLine("Błąd w nazwie zawodnika");
            ChooseForward2();
            return;
        }

        public static void ChooseCenter()
        {
            Console.Write("\n Wybierz centra:  \n");
            inputPlayerNameValue = Console.ReadLine();
            foreach (var player in AllPlayers.players) // sprawdza czy input nazwa poprawny + czy dany gracz jest dostępny do wyboru
            {
                if (inputPlayerNameValue == player.name) // szuka w AllPlayers zawodnika wpisanego w input
                {
                    if (player.availabilty == false) //sprawdza czy zawodnik input nie został już wcześniej wybrany
                    {
                        Console.WriteLine("Zawodnik już został wybrany, ponów swój wybór");
                        ChooseCenter();
                        return;
                    }
                    else if (player.availabilty == true)
                    {
                        AllManagers.managers[0].yourTeam.center = player; // przypisuje zawodnika input do usera-managera w liście managers[0]
                        player.availabilty = false;
                        return;
                    }
                }
            }
            Console.WriteLine("Błąd w nazwie zawodnika");
            ChooseCenter();
            return;
        }

        public static void PrintYourRoster()
        {

            Console.WriteLine("PG = " + AllManagers.managers[0].yourTeam.guard1.name);
            Console.WriteLine("SG = " + AllManagers.managers[0].yourTeam.guard2.name);
            Console.WriteLine("SF = " + AllManagers.managers[0].yourTeam.forward1.name);
            Console.WriteLine("PF = " + AllManagers.managers[0].yourTeam.forward2.name);
            Console.WriteLine("C = " + AllManagers.managers[0].yourTeam.center.name);
        }
    }
}
